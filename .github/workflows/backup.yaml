name: Supabase DB Backup to Storage

on:
  schedule:
    - cron: '* * * * *' # todos los d√≠as a medianoche
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    env:
      SUPABASE_PROJECT_URL: ${{ secrets.SUPABASE_PROJECT_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Create backup directory
        run: mkdir -p prisma/backups

      - name: Dump roles
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f prisma/backups/roles.sql --role-only

      - name: Dump schema
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f prisma/backups/schema.sql

      - name: Dump data
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f prisma/backups/data.sql --data-only --use-copy

      - name: Create storage bucket if not exists
        run: |
          BUCKET_NAME="backups"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${SUPABASE_PROJECT_URL}/storage/v1/bucket" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"name\": \"$BUCKET_NAME\", \"public\": false}")

          if [ "$RESPONSE" = "409" ]; then
            echo "Bucket already exists, continuing..."
          elif [ "$RESPONSE" = "200" ]; then
            echo "Bucket created successfully."
          else
            echo "Unexpected response creating bucket: $RESPONSE"
            exit 1
          fi

      - name: Upload roles.sql to Supabase Storage
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          curl -X POST "${SUPABASE_PROJECT_URL}/storage/v1/object/backups/roles_$TIMESTAMP.sql" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @prisma/backups/roles.sql

      - name: Upload schema.sql to Supabase Storage
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          curl -X POST "${SUPABASE_PROJECT_URL}/storage/v1/object/backups/schema_$TIMESTAMP.sql" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @prisma/backups/schema.sql

      - name: Upload data.sql to Supabase Storage
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          curl -X POST "${SUPABASE_PROJECT_URL}/storage/v1/object/backups/data_$TIMESTAMP.sql" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @prisma/backups/data.sql
